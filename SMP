mydmr_100<-edmr(myDiff_5X,dist=150,DMC.methdiff = 0,num.DMCs = 3)
HL<- as(myDiff_5X,"GRanges") %>% subsetByOverlaps(., mydmr_100)

myDiff_t <- as_tibble(myDiff_5X)

#Find pvalue threshold for qvalue>0.01

notsig <- myDiff_t %>% subset(qvalue>=0.01)

threshold_for_sig <- log10(min(notsig$pvalue))

SMP <- myDiff_t %>%
  
  # Compute chromosome size
  group_by(chr) %>% 
  summarise(chr_len=max(end)) %>% 
  
  # Calculate cumulative position of each chromosome
  mutate(tot=cumsum(as.numeric(chr_len))-chr_len) %>%
  select(-chr_len) %>%
  
  # Add this info to the initial dataset
  left_join(myDiff_t, ., by=c("chr"="chr")) %>%
  
  # Add a cumulative position of each SNP
  arrange(chr, end) %>%
  mutate( BPcum=end+tot) %>%
  mutate(hypo= ifelse((meth.diff<0),-1,1)) %>%
  mutate(SMvalue=hypo*(-log10(pvalue))) %>%
  dplyr::mutate_if(.,is.character,stringr::str_replace_all, pattern = "NW_*.*", replacement = "Scaffolds") %>%
  mutate(BPcum= if_else(chr == "Scaffolds", BPcum+50000000, BPcum))

SMP_HL<-left_join(HL, SMP, by=c("seqnames"="chr", "start"="start"))
axisdf = SMP %>% group_by(chr) %>% summarize(center=(max(BPcum) + min(BPcum) ) / 2 )
ggplot(SMP, aes(x=BPcum, y=(SMvalue))) +
  
  # Show all points
  geom_point(aes(color=as.factor(chr)), alpha=0.2, size=0.5) +
  scale_color_manual(values = rep(c("orange", "black"),600)) +
  geom_point(data= SMP_HL,aes(x=BPcum,y=SMvalue,color=as.factor(seqnames)),size=0.5,alpha=1) +
  
  
  # custom X axis:
  scale_x_continuous( label = axisdf$chr, breaks= axisdf$center ) +
  scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
  
  geom_hline(yintercept=threshold_for_sig, linetype="dashed", color = "red")+
  geom_hline(yintercept=-threshold_for_sig, linetype="dashed", color = "red")+
  xlab("Position in genome") +
  ylab("-log10(p-value)") +
  ylim(-30,30)+
  ggtitle("Sunset Manhattan Plot \n 5X threshold ")+

  # Custom the theme:
  theme_bw(base_size=16) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10),
    legend.position="none",
    panel.border = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    plot.title = element_text(hjust = 0.5))
